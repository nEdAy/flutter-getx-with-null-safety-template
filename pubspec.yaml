name: flutter_template
description: A new Flutter Module template project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.18.4 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.

isar_version: &isar_version 3.1.8
sentry_version: &sentry_version ^9.4.0

dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  intl: ^0.20.2
  # GetX
  get: ^4.7.2
  # HTTP client
  dio: ^5.8.0+1
  # HTTP client generator
  retrofit: ^4.6.0
  # HTTP client Log
  flutter_pretty_dio_logger: ^3.0.0
  # Dio network inspector
  dio_log: ^5.3.0+3
  # Json generation
  json_annotation: ^4.9.0
  # Log
  logger: ^2.6.0
  # Loading/Toast/Notification
  bot_toast: ^4.1.3
  # Sentry
  sentry: *sentry_version
  sentry_flutter: *sentry_version
  sentry_logging: *sentry_version
  sentry_dio: *sentry_version
  # Device Info
  device_info_plus: ^11.5.0
  # Package Info
  package_info_plus: ^8.3.0
  # Pull to Refresh
  pull_to_refresh:
    git:
      url: https://github.com/miquelbeltran/flutter_pulltorefresh
      ref: 6d7fbdd
  # Extended Image
  extended_image: ^10.0.1
  # Screen Util
  flutter_screenutil: ^5.9.3
  # Scrollable Positioned List
  scrollable_positioned_list: ^0.3.8
  # Fully async NoSQL database
  isar:
    version: *isar_version
    hosted: https://pub.isar-community.dev/
  isar_flutter_libs: # contains Isar Core
    version: *isar_version
    hosted: https://pub.isar-community.dev/
  # Network Connectivity
  internet_connection_checker: ^3.0.1
  # Utility Dart Libraries
  quiver: ^3.2.2
  # Device Preview
  device_preview: ^1.3.1

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8

dev_dependencies:
  flutter_test:
    sdk: flutter
  # Build Runner
  build_runner: ^2.5.4
  # Flutter gen runner
  flutter_gen_runner: ^5.10.0
  # HTTP client generator
  retrofit_generator: ^9.7.0
  # Json serializable
  json_serializable: ^6.9.5
  # Fully async NoSQL database
  isar_generator:
    git:
      url: https://github.com/mdddj/isar
      ref: v3
      path: packages/isar_generator/

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^6.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add Flutter specific assets to your application, add an assets section,
  # like this:
  assets:
    - assets/
    - assets/images/
    - assets/images/common/
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add Flutter specific custom fonts to your application, add a fonts
  # section here, in this "flutter" section. Each entry in this list should
  # have a "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages


  # This section identifies your Flutter project as a module meant for
  # embedding in a native host app.  These identifiers should _not_ ordinarily
  # be changed after generation - they are used to ensure that the tooling can
  # maintain consistency when adding or modifying assets and plugins.
  # They also do not have any bearing on your native host application's
  # identifiers, which may be completely independent or the same as these.
  module:
    androidX: true
    androidPackage: cn.neday.flutterTemplate
    iosBundleIdentifier: cn.neday.flutterTemplate
